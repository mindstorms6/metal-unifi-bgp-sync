/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.21.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package io.metallb.generated.models;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/** BGPPeerSpec defines the desired state of Peer. */
@ApiModel(description = "BGPPeerSpec defines the desired state of Peer.")
@javax.annotation.Generated(
    value = "org.openapitools.codegen.languages.JavaClientCodegen",
    date = "2022-12-12T06:38:05.495Z[Etc/UTC]")
public class V1beta2BGPPeerSpec {
  public static final String SERIALIZED_NAME_BFD_PROFILE = "bfdProfile";

  @SerializedName(SERIALIZED_NAME_BFD_PROFILE)
  private String bfdProfile;

  public static final String SERIALIZED_NAME_EBGP_MULTI_HOP = "ebgpMultiHop";

  @SerializedName(SERIALIZED_NAME_EBGP_MULTI_HOP)
  private Boolean ebgpMultiHop;

  public static final String SERIALIZED_NAME_HOLD_TIME = "holdTime";

  @SerializedName(SERIALIZED_NAME_HOLD_TIME)
  private String holdTime;

  public static final String SERIALIZED_NAME_KEEPALIVE_TIME = "keepaliveTime";

  @SerializedName(SERIALIZED_NAME_KEEPALIVE_TIME)
  private String keepaliveTime;

  public static final String SERIALIZED_NAME_MY_A_S_N = "myASN";

  @SerializedName(SERIALIZED_NAME_MY_A_S_N)
  private Integer myASN;

  public static final String SERIALIZED_NAME_NODE_SELECTORS = "nodeSelectors";

  @SerializedName(SERIALIZED_NAME_NODE_SELECTORS)
  private List<V1beta2BGPPeerSpecNodeSelectors> nodeSelectors = null;

  public static final String SERIALIZED_NAME_PASSWORD = "password";

  @SerializedName(SERIALIZED_NAME_PASSWORD)
  private String password;

  public static final String SERIALIZED_NAME_PASSWORD_SECRET = "passwordSecret";

  @SerializedName(SERIALIZED_NAME_PASSWORD_SECRET)
  private V1beta2BGPPeerSpecPasswordSecret passwordSecret;

  public static final String SERIALIZED_NAME_PEER_A_S_N = "peerASN";

  @SerializedName(SERIALIZED_NAME_PEER_A_S_N)
  private Integer peerASN;

  public static final String SERIALIZED_NAME_PEER_ADDRESS = "peerAddress";

  @SerializedName(SERIALIZED_NAME_PEER_ADDRESS)
  private String peerAddress;

  public static final String SERIALIZED_NAME_PEER_PORT = "peerPort";

  @SerializedName(SERIALIZED_NAME_PEER_PORT)
  private Integer peerPort;

  public static final String SERIALIZED_NAME_ROUTER_I_D = "routerID";

  @SerializedName(SERIALIZED_NAME_ROUTER_I_D)
  private String routerID;

  public static final String SERIALIZED_NAME_SOURCE_ADDRESS = "sourceAddress";

  @SerializedName(SERIALIZED_NAME_SOURCE_ADDRESS)
  private String sourceAddress;

  public V1beta2BGPPeerSpec bfdProfile(String bfdProfile) {

    this.bfdProfile = bfdProfile;
    return this;
  }

  /**
   * The name of the BFD Profile to be used for the BFD session associated to the BGP session. If
   * not set, the BFD session won&#39;t be set up.
   *
   * @return bfdProfile
   */
  @javax.annotation.Nullable @ApiModelProperty(
      value =
          "The name of the BFD Profile to be used for the BFD session associated to the BGP session. If not set, the BFD session won't be set up.")
  public String getBfdProfile() {
    return bfdProfile;
  }

  public void setBfdProfile(String bfdProfile) {
    this.bfdProfile = bfdProfile;
  }

  public V1beta2BGPPeerSpec ebgpMultiHop(Boolean ebgpMultiHop) {

    this.ebgpMultiHop = ebgpMultiHop;
    return this;
  }

  /**
   * To set if the BGPPeer is multi-hops away. Needed for FRR mode only.
   *
   * @return ebgpMultiHop
   */
  @javax.annotation.Nullable @ApiModelProperty(value = "To set if the BGPPeer is multi-hops away. Needed for FRR mode only.")
  public Boolean getEbgpMultiHop() {
    return ebgpMultiHop;
  }

  public void setEbgpMultiHop(Boolean ebgpMultiHop) {
    this.ebgpMultiHop = ebgpMultiHop;
  }

  public V1beta2BGPPeerSpec holdTime(String holdTime) {

    this.holdTime = holdTime;
    return this;
  }

  /**
   * Requested BGP hold time, per RFC4271.
   *
   * @return holdTime
   */
  @javax.annotation.Nullable @ApiModelProperty(value = "Requested BGP hold time, per RFC4271.")
  public String getHoldTime() {
    return holdTime;
  }

  public void setHoldTime(String holdTime) {
    this.holdTime = holdTime;
  }

  public V1beta2BGPPeerSpec keepaliveTime(String keepaliveTime) {

    this.keepaliveTime = keepaliveTime;
    return this;
  }

  /**
   * Requested BGP keepalive time, per RFC4271.
   *
   * @return keepaliveTime
   */
  @javax.annotation.Nullable @ApiModelProperty(value = "Requested BGP keepalive time, per RFC4271.")
  public String getKeepaliveTime() {
    return keepaliveTime;
  }

  public void setKeepaliveTime(String keepaliveTime) {
    this.keepaliveTime = keepaliveTime;
  }

  public V1beta2BGPPeerSpec myASN(Integer myASN) {

    this.myASN = myASN;
    return this;
  }

  /**
   * AS number to use for the local end of the session. minimum: 0 maximum: 4294967295
   *
   * @return myASN
   */
  @ApiModelProperty(required = true, value = "AS number to use for the local end of the session.")
  public Integer getMyASN() {
    return myASN;
  }

  public void setMyASN(Integer myASN) {
    this.myASN = myASN;
  }

  public V1beta2BGPPeerSpec nodeSelectors(List<V1beta2BGPPeerSpecNodeSelectors> nodeSelectors) {

    this.nodeSelectors = nodeSelectors;
    return this;
  }

  public V1beta2BGPPeerSpec addNodeSelectorsItem(
      V1beta2BGPPeerSpecNodeSelectors nodeSelectorsItem) {
    if (this.nodeSelectors == null) {
      this.nodeSelectors = new ArrayList<>();
    }
    this.nodeSelectors.add(nodeSelectorsItem);
    return this;
  }

  /**
   * Only connect to this peer on nodes that match one of these selectors.
   *
   * @return nodeSelectors
   */
  @javax.annotation.Nullable @ApiModelProperty(value = "Only connect to this peer on nodes that match one of these selectors.")
  public List<V1beta2BGPPeerSpecNodeSelectors> getNodeSelectors() {
    return nodeSelectors;
  }

  public void setNodeSelectors(List<V1beta2BGPPeerSpecNodeSelectors> nodeSelectors) {
    this.nodeSelectors = nodeSelectors;
  }

  public V1beta2BGPPeerSpec password(String password) {

    this.password = password;
    return this;
  }

  /**
   * Authentication password for routers enforcing TCP MD5 authenticated sessions
   *
   * @return password
   */
  @javax.annotation.Nullable @ApiModelProperty(
      value = "Authentication password for routers enforcing TCP MD5 authenticated sessions")
  public String getPassword() {
    return password;
  }

  public void setPassword(String password) {
    this.password = password;
  }

  public V1beta2BGPPeerSpec passwordSecret(V1beta2BGPPeerSpecPasswordSecret passwordSecret) {

    this.passwordSecret = passwordSecret;
    return this;
  }

  /**
   * Get passwordSecret
   *
   * @return passwordSecret
   */
  @javax.annotation.Nullable @ApiModelProperty(value = "")
  public V1beta2BGPPeerSpecPasswordSecret getPasswordSecret() {
    return passwordSecret;
  }

  public void setPasswordSecret(V1beta2BGPPeerSpecPasswordSecret passwordSecret) {
    this.passwordSecret = passwordSecret;
  }

  public V1beta2BGPPeerSpec peerASN(Integer peerASN) {

    this.peerASN = peerASN;
    return this;
  }

  /**
   * AS number to expect from the remote end of the session. minimum: 0 maximum: 4294967295
   *
   * @return peerASN
   */
  @ApiModelProperty(
      required = true,
      value = "AS number to expect from the remote end of the session.")
  public Integer getPeerASN() {
    return peerASN;
  }

  public void setPeerASN(Integer peerASN) {
    this.peerASN = peerASN;
  }

  public V1beta2BGPPeerSpec peerAddress(String peerAddress) {

    this.peerAddress = peerAddress;
    return this;
  }

  /**
   * Address to dial when establishing the session.
   *
   * @return peerAddress
   */
  @ApiModelProperty(required = true, value = "Address to dial when establishing the session.")
  public String getPeerAddress() {
    return peerAddress;
  }

  public void setPeerAddress(String peerAddress) {
    this.peerAddress = peerAddress;
  }

  public V1beta2BGPPeerSpec peerPort(Integer peerPort) {

    this.peerPort = peerPort;
    return this;
  }

  /**
   * Port to dial when establishing the session. minimum: 0 maximum: 16384
   *
   * @return peerPort
   */
  @javax.annotation.Nullable @ApiModelProperty(value = "Port to dial when establishing the session.")
  public Integer getPeerPort() {
    return peerPort;
  }

  public void setPeerPort(Integer peerPort) {
    this.peerPort = peerPort;
  }

  public V1beta2BGPPeerSpec routerID(String routerID) {

    this.routerID = routerID;
    return this;
  }

  /**
   * BGP router ID to advertise to the peer
   *
   * @return routerID
   */
  @javax.annotation.Nullable @ApiModelProperty(value = "BGP router ID to advertise to the peer")
  public String getRouterID() {
    return routerID;
  }

  public void setRouterID(String routerID) {
    this.routerID = routerID;
  }

  public V1beta2BGPPeerSpec sourceAddress(String sourceAddress) {

    this.sourceAddress = sourceAddress;
    return this;
  }

  /**
   * Source address to use when establishing the session.
   *
   * @return sourceAddress
   */
  @javax.annotation.Nullable @ApiModelProperty(value = "Source address to use when establishing the session.")
  public String getSourceAddress() {
    return sourceAddress;
  }

  public void setSourceAddress(String sourceAddress) {
    this.sourceAddress = sourceAddress;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1beta2BGPPeerSpec v1beta2BGPPeerSpec = (V1beta2BGPPeerSpec) o;
    return Objects.equals(this.bfdProfile, v1beta2BGPPeerSpec.bfdProfile)
        && Objects.equals(this.ebgpMultiHop, v1beta2BGPPeerSpec.ebgpMultiHop)
        && Objects.equals(this.holdTime, v1beta2BGPPeerSpec.holdTime)
        && Objects.equals(this.keepaliveTime, v1beta2BGPPeerSpec.keepaliveTime)
        && Objects.equals(this.myASN, v1beta2BGPPeerSpec.myASN)
        && Objects.equals(this.nodeSelectors, v1beta2BGPPeerSpec.nodeSelectors)
        && Objects.equals(this.password, v1beta2BGPPeerSpec.password)
        && Objects.equals(this.passwordSecret, v1beta2BGPPeerSpec.passwordSecret)
        && Objects.equals(this.peerASN, v1beta2BGPPeerSpec.peerASN)
        && Objects.equals(this.peerAddress, v1beta2BGPPeerSpec.peerAddress)
        && Objects.equals(this.peerPort, v1beta2BGPPeerSpec.peerPort)
        && Objects.equals(this.routerID, v1beta2BGPPeerSpec.routerID)
        && Objects.equals(this.sourceAddress, v1beta2BGPPeerSpec.sourceAddress);
  }

  @Override
  public int hashCode() {
    return Objects.hash(
        bfdProfile,
        ebgpMultiHop,
        holdTime,
        keepaliveTime,
        myASN,
        nodeSelectors,
        password,
        passwordSecret,
        peerASN,
        peerAddress,
        peerPort,
        routerID,
        sourceAddress);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1beta2BGPPeerSpec {\n");
    sb.append("    bfdProfile: ").append(toIndentedString(bfdProfile)).append("\n");
    sb.append("    ebgpMultiHop: ").append(toIndentedString(ebgpMultiHop)).append("\n");
    sb.append("    holdTime: ").append(toIndentedString(holdTime)).append("\n");
    sb.append("    keepaliveTime: ").append(toIndentedString(keepaliveTime)).append("\n");
    sb.append("    myASN: ").append(toIndentedString(myASN)).append("\n");
    sb.append("    nodeSelectors: ").append(toIndentedString(nodeSelectors)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    passwordSecret: ").append(toIndentedString(passwordSecret)).append("\n");
    sb.append("    peerASN: ").append(toIndentedString(peerASN)).append("\n");
    sb.append("    peerAddress: ").append(toIndentedString(peerAddress)).append("\n");
    sb.append("    peerPort: ").append(toIndentedString(peerPort)).append("\n");
    sb.append("    routerID: ").append(toIndentedString(routerID)).append("\n");
    sb.append("    sourceAddress: ").append(toIndentedString(sourceAddress)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
