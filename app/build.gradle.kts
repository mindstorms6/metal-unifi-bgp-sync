/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Kotlin application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.5/userguide/building_java_projects.html
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
  // Apply the org.jetbrains.kotlin.jvm Plugin to add support for Kotlin.
  id("org.jetbrains.kotlin.jvm") version "1.6.21"
  // Formatting
  id("com.diffplug.spotless") version "6.12.0"

  // Apply the application plugin to add support for building a CLI application in Java.
  application
}

repositories {
  // Use Maven Central for resolving dependencies.
  mavenCentral()
}

configure<com.diffplug.gradle.spotless.SpotlessExtension> {
  format("misc") {
    // define the files to apply `misc` to
    target("*.gradle", "*.md", ".gitignore")

    // define the steps to apply to those files
    trimTrailingWhitespace()
    indentWithTabs() // or spaces. Takes an integer argument if you don't like 4
    endWithNewline()
  }
  java {
    // don't need to set target, it is inferred from java

    // apply a specific flavor of google-java-format
    googleJavaFormat()
    // fix formatting of type annotations
    formatAnnotations()
  }
  kotlin {
    // by default the target is every '.kt' and '.kts` file in the java sourcesets
    ktfmt() // has its own section below
    ktlint() // has its own section below
    //        diktat()   // has its own section below
    //        prettier() // has its own section below
  }
  kotlinGradle {
    target("*.gradle.kts") // default target for kotlinGradle
    ktlint() // or ktfmt() or prettier()
    ktfmt()
  }
}

dependencies {
  // Align versions of all Kotlin components
  implementation(platform("org.jetbrains.kotlin:kotlin-bom"))

  // Use the Kotlin JDK 8 standard library.
  implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")

  implementation("io.kubernetes:client-java:15.0.1") { because("Kubernetes interactions") }
  implementation("io.kubernetes:client-java-extended:15.0.1") {
    because("Java kubectl equivalent commands - easier to deal with")
  }

  implementation("org.jetbrains.kotlinx:kotlinx-cli:0.3.5") { because("Parse cli arguments") }

  implementation("com.google.code.gson:gson:2.10") { because("Emit JSON snippet for unifi") }

  // This dependency is used by the application.
  implementation("com.google.guava:guava:31.0.1-jre")
}

testing {
  suites {
    // Configure the built-in test suite
    val test by
        getting(JvmTestSuite::class) {
          // Use Kotlin Test test framework
          useKotlinTest()
        }
  }
}

application {
  // Define the main class for the application.
  mainClass.set("com.bdawg.metalbgp.AppKt")
}
